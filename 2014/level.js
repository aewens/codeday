// Generated by CoffeeScript 1.7.1
(function() {
  var Level;

  Level = (function() {
    function Level(level, unit) {
      var color, o, one, self, solid, win, x, y, _i, _ref, _ref1;
      one = level.points;
      this.color = level.color;
      this.solid = level.solid;
      this.win = level.win;
      this.three = [[]];
      this.unit = unit;
      this.w = one[0];
      this.h = one[1];
      this.one = this.points = one.slice(2);
      this.blocks = [];
      self = this;
      for (o = _i = 0, _ref = this.one.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; o = 0 <= _ref ? ++_i : --_i) {
        color = this.color[this.one[o] + 1];
        solid = this.solid[this.one[o] + 1];
        win = this.win[this.one[o] + 1];
        if (color === null) {
          continue;
        }
        _ref1 = this.xy(o).map(function(i) {
          return i * self.unit;
        }), x = _ref1[0], y = _ref1[1];
        this.blocks.push(new Box(x, y, this.unit, this.unit, color, solid, win));
      }
    }

    Level.prototype.point = function(x, y) {
      return this.one[x + y * this.h];
    };

    Level.prototype.xy = function(p) {
      return [p % this.w, floor(p / this.w)];
    };

    Level.prototype.render = function(ctx) {
      var block, _i, _len, _ref, _results;
      _ref = this.blocks;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        block = _ref[_i];
        _results.push(block.render(ctx));
      }
      return _results;
    };

    return Level;

  })();

  window.Level = Level;

}).call(this);
