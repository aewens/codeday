// Generated by CoffeeScript 1.7.1
(function() {
  var Mu,
    __slice = [].slice;

  Mu = function() {
    var array, usable, x, xs;
    xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    if (xs.length > 1) {
      x = xs;
      array = true;
      usable = true;
      return new Mu.fn.of(x, usable, array);
    } else if (xs[0].length > 1 && xs[1] === void 0) {
      x = xs[0];
      array = true;
      usable = true;
      return new Mu.fn.of(x, usable, array);
    } else {
      x = xs[0];
      array = false;
      if (x === null || x === void 0 || x.length <= 0 || x === false) {
        x = null;
        usable = false;
        return new Mu.fn.of(x, usable, array);
      } else {
        if (x instanceof Mu) {
          return x;
        } else {
          x = x;
          usable = true;
          return new Mu.fn.of(x, usable, array);
        }
      }
    }
  };

  Mu.fn = Mu.prototype;

  Mu.fn.of = function(x, usable, array) {
    var _ref;
    _ref = [x, usable, array], this.x = _ref[0], this.usable = _ref[1], this.array = _ref[2];
    this.value = x;
    return this;
  };

  Mu.fn.isArray = function(x) {
    return this.array;
  };

  Mu.fn.into = function(z) {
    if (this.isArray()) {
      this.x.map(function(x) {
        return z.push(x);
      });
    } else {
      z.push(this.x);
    }
    return z;
  };

  Mu.fn.of.prototype = Mu.fn;

  window.Mu = Mu;

  window.Âµ = Mu;

}).call(this);
