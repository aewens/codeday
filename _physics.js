// Generated by CoffeeScript 1.7.1
(function() {
  var Physics,
    __slice = [].slice;

  Physics = (function() {
    function Physics(code, level, you) {
      if (M(code, you).all()) {
        this.universe = code.canvas;
        this.world = code.ctx;
        this.level = level;
        this.unit = code.unit;
        this.keys = code.keyState;
        this.you = you;
        this.objects = [];
        this.blocks = level.blocks;
      } else {
        throw new TypeError("There is nothing. You are nothing.");
      }
    }

    Physics.prototype.add = function() {
      var xs;
      xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return this.objects = Mu.apply(null, xs).into(this.objects);
    };

    Physics.prototype.gravity = function(obj) {
      return obj.y += floor(sqrt(this.unit) / 2);
    };

    Physics.prototype.update = function() {
      var hit, prev;
      prev = new Vector2(this.you.x, this.you.y);
      if (!this.you.ground) {
        this.gravity(this.you);
      }
      this.you.update(this.keys, this.unit, this.world);
      hit = this.you.collide(this.blocks);
      if (hit) {
        this.you.ground = true;
        this.you.x = prev.x;
        return this.you.y = prev.y;
      }
    };

    Physics.prototype.render = function() {
      var self;
      self = this;
      this.world.clearRect(0, 0, this.universe.width, this.universe.height);
      this.level.render(this.world, this.unit);
      this.you.render(this.world);
      return this.objects.map(function(obj) {
        return obj.render(self.world);
      });
    };

    return Physics;

  })();

  window.Physics = Physics;

}).call(this);
