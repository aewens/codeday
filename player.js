// Generated by CoffeeScript 1.7.1
(function() {
  var Player,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Player = (function(_super) {
    __extends(Player, _super);

    function Player(x, y) {
      Player.__super__.constructor.call(this, x, y, 50, 50, new Color(210, 13, 50));
      this.ground = false;
      this.jumping = false;
      this.falling = true;
    }

    Player.prototype.update = function(key, unit, canvas) {
      if ((((key[87] || key[32]) && this.ground) || this.jumping) && !this.falling) {
        if (key[65]) {
          this.move(-(unit / 20), 0);
        }
        if (key[68]) {
          this.move(unit / 20, 0);
        }
        if (this.jumping === false || this.jy === void 0) {
          this.jy = this.y - (unit * 1.5);
        }
        this.ground = false;
        this.jumping = true;
        this.move(0, -(unit / 8));
        if (this.y <= this.jy) {
          this.jumping = false;
          this.falling = true;
        }
      } else {
        if (key[65]) {
          this.x = this.x - (unit / 20);
          this.falling = true;
        }
        if (key[68]) {
          this.x = this.x + (unit / 20);
          this.falling = true;
        }
      }
      if (this.x < 0) {
        this.x = 0;
      }
      if (this.y < 0) {
        this.y = 0;
      }
      if (this.x + this.w > canvas.width) {
        this.x = canvas.width - this.w;
      }
      if (this.y + this.h > canvas.height) {
        return this.y = canvas.height - this.h;
      }
    };

    return Player;

  })(Box);

  window.Player = Player;

}).call(this);
