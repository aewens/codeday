// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["state", "pappai", "vector", "player", "block", "map"], function(State, Pappai, Vector, Player, Block, Map) {
    var GameState;
    GameState = (function(_super) {
      __extends(GameState, _super);

      function GameState(game) {
        GameState.__super__.constructor.call(this, game);
        this.w = this.game.ctx.width;
        this.h = this.game.ctx.height;
        this.player = new Player(60, this.h - 200, 20, "#00f");
        this.map = new Map(16, 12, 40);
        this.map.row(11, "platform");
        this.map.fromR(4, 7, 5, "platform");
      }

      GameState.prototype.handleInputs = function(input) {
        if (input.isDown("left")) {
          this.player.move(-1, 0);
        }
        if (input.isDown("right")) {
          this.player.move(1, 0);
        }
        if (input.isPressed("spacebar")) {
          if (this.player.canJump) {
            return this.player.move(0, -40);
          }
        }
      };

      GameState.prototype.update = function() {
        this.map.update(this.player);
        return this.player.update(this.map);
      };

      GameState.prototype.render = function(ctx) {
        ctx.clear();
        this.player.render();
        return this.map.render();
      };

      return GameState;

    })(State);
    return GameState;
  });

}).call(this);
